[{"id":"8ea208f8.715df8","type":"function","name":"Theshhold filter","func":"//Setting\nvar delta_limit = 1.0;\n\n//Only works for meterevents\nvar topic_parts = msg.topic.split(\"/\");\nvar EventType = topic_parts.pop()\nif (EventType != \"meterevent\")\n{\n\tmsg.payload = EventType\n\treturn msg;\n}\n\n//Create event list if first time. \ncontext.lastevents = context.lastevents || {}; \n\n//Parse payload\npayload = JSON.parse(msg.payload);\n\nfor (var topic in context.lastevents) {\n    if (context.lastevents.hasOwnProperty(topic)) {\n    \tif (topic[0] != \"_\") \n    \t{\n    \t\tif (topic == msg.topic)\n    \t\t{\n    \t\t\tdelta = Math.abs(payload[\"power\"] - context.lastevents[topic][\"power\"]);\n    \t\t\t\n        \t\tif (delta > delta_limit)\n        \t\t{\n        \t\t\t//Save \n\t\t\t\t\tcontext.lastevents[msg.topic] = payload;\n\t\t\t\t\treturn msg;\n        \t\t}\n        \t\telse\n        \t\t\treturn null;\n        \t\n        \t}\n        }\n    }\n}\n\n\n//No preivous record. \ncontext.lastevents[msg.topic] = payload;\nreturn msg;","outputs":1,"x":740,"y":63,"z":"716249cc.8e9db8","wires":[[]]}]